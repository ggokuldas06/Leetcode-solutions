class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        unordered_map<string, vector<string>> groups;
        for (string& s: strs) {
            string t = s;
            sort(t.begin(), t.end());
            groups[t].push_back(s);
        }
        
        vector<vector<string>> ans;
        for (auto [key, val]: groups) {
            ans.push_back(val);
        }
        
        return ans;
    }
};



*********[ALTERNATE METHOD]******************
class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        map<vector<int>,vector<string>>hash;
        for(auto x:strs)
        {
            vector<int>cha(26,0);
            for(auto i:x)
            {
                cha[i-'a']+=1;
            }
            hash[cha].push_back(x);
        }
        vector<vector<string>>ans;
        for(auto j:hash) ans.push_back(j.second);
        return ans;
    }
};

********************************
time complexity O(n)
medium
https://leetcode.com/problems/group-anagrams/description/
********************************
