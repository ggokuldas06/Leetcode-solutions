class Solution {
public:
    unordered_map<int,vector<int>>graph;
    int dfs(int node,vector<int>&seen)
    {
        if(seen[node]==true) return 0;
        int temp=0;
        seen[node]=true;
        for(auto x:graph[node])
        {
            temp+=dfs(x,seen);
        }
        return 1+temp;
    }
    int reachableNodes(int n, vector<vector<int>>& edges, vector<int>& restricted) {
        vector<int>seen(n,false);
        for(auto j:edges)
        {
            graph[j[0]].push_back(j[1]);
            graph[j[1]].push_back(j[0]);
        }
        for(auto x:restricted)
        {
            seen[x]=true;
        }
        return dfs(0,seen);
    }
};

***********************
Time complexity O(n)
medium
https://leetcode.com/problems/reachable-nodes-with-restriction
***********************
