class Solution {
public:
    void backtrack(vector<int>& curr,vector<vector<int>>&ans,vector<int>nums)
    {
        if(curr.size()==nums.size())
        {
            ans.push_back(curr);
            return;
        }
        for(int x:nums)
        {
            if(find(curr.begin(),curr.end(),x)==curr.end())
            {
                curr.push_back(x);
                backtrack(curr,ans,nums);
                curr.pop_back();
            }
        }
    }
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>>ans;
        vector<int>curr={};
        backtrack(curr,ans,nums);
        return ans;
    }
};

************************************
Time complexity O(n*n!)
medium

************************************
