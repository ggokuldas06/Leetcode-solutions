/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if(head==nullptr)
        {
            return head;
        }
       while(head!=nullptr && head->val==val){
        head=head->next;
       }
       ListNode* dummy=head;
       while(head!=nullptr && head->next!=nullptr)
       {
        if(head->next->val==val)
        {
            head->next=head->next->next;
        }
        else
        {
            head=head->next;
        }
       }
       return dummy;
    }
};


*****************************
time complexity O(N)
easy
https://leetcode.com/problems/remove-linked-list-elements/
*****************************
