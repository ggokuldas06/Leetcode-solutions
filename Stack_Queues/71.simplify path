class Solution {
public:
    string simplifyPath(string path) {
        string temp="";
        vector <string>stack;
        for(char x:path)
        {
            if(x=='/')
            {
                if(temp==".")
                {
                    temp="";
                }
                if(temp!="" && temp!="..")
                {
                    stack.push_back(temp);
                    temp="";
                }
                else if(temp=="..")
                {
                    if(!stack.empty())
                    {
                        stack.pop_back();
                    }
                    temp="";
                }
            }
            else
            {
                temp+=x;
            }
        }
        if (temp == "..") {
            if (!stack.empty()) {
                stack.pop_back();
            }
        } else if (!temp.empty() && temp != ".") {
            stack.push_back(temp);
        }
    string ans="";
    for(auto i:stack)
    {
        ans+='/';
        ans+=i;
    }
    return ans==""?"/":ans;
    }
};

****************************************
Time complexity o(n)
medium
https://leetcode.com/problems/simplify-path/description/
****************************************
