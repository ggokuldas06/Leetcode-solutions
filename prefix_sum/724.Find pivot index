class Solution {
public:
    int pivotIndex(vector<int>& nums) {
        vector<int> prefix;
        if (nums.size() == 0) {
            return -1;
        }
        prefix.push_back(nums[0]);

        for (int j = 1; j < nums.size(); j++) {
            prefix.push_back(prefix[j - 1] + nums[j]);
        }

        for (int i = 0; i < nums.size(); i++) {
            int leftSum = (i == 0) ? 0 : prefix[i - 1];
            int rightSum = prefix.back() - prefix[i];
            if (leftSum == rightSum) {
                return i;
            }
        }

        return -1;
    }
};
******************
Time complexity O(n)
easy
https://leetcode.com/problems/find-pivot-index/
******************
