

class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        if (!root) return 0;

        queue<TreeNode*> q;
        q.push(root);

        int maxSum = INT_MIN;  
        int maxLevel = 0;
        int level = 0;

        while (!q.empty()) {
            level++;
            int levelSum = 0;
            int n = q.size(); 

            for (int i = 0; i < n; i++) {
                TreeNode* curr = q.front();
                q.pop(); 

                levelSum += curr->val;

                if (curr->left) q.push(curr->left);
                if (curr->right) q.push(curr->right);
            }


            if (levelSum > maxSum) {
                maxSum = levelSum;
                maxLevel = level;
            }
        }

        return maxLevel;
    }
};



**********************
Time complexity O(n)
medium
https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree/
**********************
