/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans=0;
    void dfs(TreeNode* head,bool right,int curr)
    {
        if(!head) return;
        ans=max(ans,curr);
        if(right)
        {
            dfs(head->right,false,curr+1);
            dfs(head->left,true,1);
        }
        else
        {
            dfs(head->left,true,curr+1);
            dfs(head->right,false,1);
        }
    }
    int longestZigZag(TreeNode* root) {
        dfs(root,true,0);
        dfs(root,false,0);
        return ans;
    }
};

**********************
Time compleity O(n)
medium
https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree/
**********************
