class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>>ans;
        if(!root) return ans;
        queue<TreeNode*>q;
        q.push(root);
        bool g=true;
        while(!q.empty())
        {
            vector<int>temp;
            int n=q.size();
            for(int i=0;i<n;i++)
            {
                TreeNode* curr=q.front();
                temp.push_back(curr->val);
                q.pop();
                if(curr->left) q.push(curr->left);
                if(curr->right) q.push(curr->right);
                
            }
            if(!g) reverse(temp.begin(),temp.end());
            ans.push_back(temp);
            g=!g;
        }
        return ans;
    }
}

***********************
Time complexity O(n)
medium
https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/submissions/1462963147/
***********************
