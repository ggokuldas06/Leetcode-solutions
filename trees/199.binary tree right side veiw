class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        if(root==nullptr) return vector<int>{};
        vector<int>ans;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty())
        {
            int temp=q.size();
            ans.push_back(q.back()->val);
            for(int i=0;i<temp;i++)
            {
                TreeNode* node=q.front();
                q.pop();
                if(node->left) q.push(node->left);
                if(node->right) q.push(node->right);
            }
        }
        return ans;
    }
};
**************
Time complexity O(n)
medium
https://leetcode.com/problems/binary-tree-right-side-view/
**************
