/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void dfs(TreeNode* root,vector<int>&nodes)
    {
        if(root==nullptr) return;
        dfs(root->left,nodes);
        nodes.push_back(root->val);
        dfs(root->right,nodes);
    }
    bool findTarget(TreeNode* root, int t) {
        vector<int>nodes;
        dfs(root,nodes);
        int left=0;
        int right=nodes.size()-1;
        while(left<right)
        {
            if(nodes[left]+nodes[right]<t)
            {
                left++;
            }
            else if(nodes[left]+nodes[right]>t)
            {
                right--;
            }
            else return true;
        }
        return false;
    }
};\


****************
Time complexity O(n)
easy
https://leetcode.com/problems/two-sum-iv-input-is-a-bst/
****************
