class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int p = 0, q = nums.size() - 1;
        if (nums.empty()) return {-1, -1}; 
        
        while (p <= q) { 
            int temp = (p + q) / 2;
            
            if (nums[temp] < target) {
                p = temp + 1; 
            } 
            else if (nums[temp] > target) {
                q = temp - 1; 
            } 
            else {
                int s = temp, e = temp; 
                
                while (s > 0 && nums[s - 1] == target) { 
                    s--;
                }
                while (e < nums.size() - 1 && nums[e + 1] == target) { 
                    e++;
                }
                
                return {s, e};
            }
        }
        
        return {-1, -1};
    }
};


*************************
time complexity O(logn)
medium
leetcode:https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/submissions/1529386972/
*************************
